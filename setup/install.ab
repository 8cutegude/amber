import { has_failed, includes, exit, chars } from "std"

let name = "AmberNative"
let target = "amber"
let tag = "0.3.1-alpha"
let place = "/opt/amber"
let agent = has_failed("uname -a")
    then "unknown"
    else unsafe $uname -a$

main {
    // Determine OS type
    let os_type = $uname -s$ failed {
        echo "Failed to determine OS type."
        echo "Please try again or use another download method."
        exit(1)
    }
    let os = os_type == "Darwin"
        then "macos"
        else "linux"

    // Determine architecture
    let arch_type = $uname -m$ failed {
        echo "Failed to determine architecture."
        echo "Please try again or use another download method."
        exit(1)
    }
    let arch = includes(["arm64", "aarch64"], arch_type)
        then "aarch64"
        else "x86_64"

    // Set the download link
    let url = "https://github.com/Ph0enixKM/{name}/releases/download/{tag}/amber_{os}_{arch}"

    // Check if such directory exists
    unsafe $test -d "{place}"$

    if status == 0 {
        echo "Amber already installed"
        echo "It seems that Amber is already installed on your system. ({place})"
        echo "If you want to reinstall Amber, uninstall it first."
        echo "(Find out more at https://docs.amber-lang.com/getting_started/installation#uninstallation)"
        exit(2)
    }

    // Check if curl is installed
    if has_failed("curl -V") {
        echo "Curl is not installed on your system."
        echo "Please install `curl` and try again."
        exit(1)
    }

    echo "Installing Amber... ðŸš€"

    // Download amber
    silent $curl -L -o "{target}" "{url}"$ failed {
        echo "Curl failed to download amber."
        echo "Something went wrong. Please try again later."
        exit(1)
    }

    // Create directory for amber
    silent $sudo mkdir "{place}"$ failed {
        echo "Failed to create directory for amber."
        echo "Please make sure that root user can access /opt directory."
        exit(1)
    }
    // Move zipped version of amber
    $sudo mv "{target}" "{place}/{target}"$ failed {
        echo "Failed to move amber to the installation directory."
        echo "Please make sure that root user can access /opt directory."
        exit(1)
    }
    // Give permissions to execute amber
    $sudo chmod +x "{place}/{target}"$ failed {
        echo "Failed to give permissions to execute amber."
        echo "Please make sure that root user can access /opt directory."
        exit(1)
    }
    // Create amber symbol link
    $sudo ln -s "{place}/{target}" "/usr/local/bin/{target}"$ failed {
        echo "Failed to create amber symbol link."
        echo "Please make sure that root user can access /usr/local/bin directory."
        exit(1)
    }

    // Send feedback to the server
    unsafe silent $curl -G --data-urlencode "agent={agent}" --data-urlencode "name=download" "https://amber-lang.com/api/visit"$

    // Send success message
    unsafe $echo -e "{"\\033[0;32m"}Amber has been installed successfully.{"\\033[0m"} ðŸŽ‰"$
    echo "\nNow you can use amber by typing `amber` in your terminal."
}
