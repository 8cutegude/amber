let tag = '1.0.0'
let place = '/opt/amber'
let url = 'https://github.com/Ph0enixKM/Amber/releases/download/{tag}/amber.zip'

# Check if such directory exists
$test -d "{place}" > /dev/null$

if $echo \$?$ == '0' {
    $echo "Amber already installed" $
    $echo "It seems that Amber is already installed on your system."$
    $echo "If you want to reinstall Amber - try to uninstall it first."$
    $echo "(Find out more at https://amber.marbl.cc)"$
    $exit 0$
}

$echo "Installing Amber" $
let target = 'amber.zip'

# Download Amber
if {
    # Check if ruby is installed
    $ruby -v > /dev/null; echo \$?$ == '0' {
        let code = 'require "open-uri"; open("{target}", "wb") do |file|; file << open("{url}").read; end'
        $echo "Using ruby as a download method..."$
        $ruby -e "{code}"$
    }
    # Check if curl is installed
    $curl -v > /dev/null; echo \$?$ == '0' {
        $echo "Using curl as a download method..."$
        $curl -o "{target}" "{url}"$
    }
    # Check if wget is installed
    $wget -v > /dev/null; echo \$?$ == '0' {
        $echo "Using wget as a download method..."$
        $wget -O "{target}" "{url}"$
    }
    else {
        $echo "Neither ruby, curl or wget are installed on your system."$
        $echo "Please install one of them and try again."$
        $exit 1$
    }
}
# Create directory for amber
$sudo mkdir {place} > /dev/null$
# Move zipped version of amber
$sudo mv amber.zip {place}/amber.zip$
# Go to the place (with option to rollback)
$pushd {place} > /dev/null$
# Unzip Amber's contents
$echo 'Unpacking...'$
$sudo unzip {place}/amber.zip$
# Remove zip file
$sudo rm {place}/amber.zip$
# Create amber symbol link
$sudo ln -s {place}/amber /usr/local/bin/amber$
# Go back to where we've been
$popd {place}$

$echo "Amber has been installed successfully."$